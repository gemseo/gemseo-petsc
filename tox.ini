# tox (https://tox.readthedocs.io/) is a tool for running tests in multiple environments.

[tox]
# this version support empty factors we use for {,-win}
minversion = 3.20.0
requires = tox-conda >=0.7.3
envlist =
    py{36,37,38,39}

[testenv]
platform =
    win: win32
    # prevent creating a non-working env on windows
    !win: (linux|darwin)
conda_channels=
    conda-forge
conda_install_args =
    # environment reproducibility: do not search default or .condarc channels
    --override-channels
conda_spec =
    requirements/gemseo-conda-python3.txt
deps =
    gemseo@git+http://dummy:{env:gemseo_token}@forge-mdo.irt-aese.local/dev/gems/gems.git@develop
    -r requirements/test.txt
extras = all
setenv =
    # use a non GUI rendering backend for matplotlib
    MPLBACKEND = AGG
passenv =
    gemseo_token
commands =
    pytest --cov-config setup.cfg {posargs}


[testenv:dev]
description = env for development
basepython = python3.9
deps =
    {[testenv]deps}
    -r requirements/dev.txt
usedevelop = true
whitelist_externals =
    git
commands =
    pre-commit install -t commit-msg -t pre-commit

[testenv:style]
description = run style formatting and checking
basepython = {[testenv:dev]basepython}
# we do not need to inherit from the root env
conda_spec =
conda_deps =
deps = -r requirements/style.txt
skip_install = true
whitelist_externals =
    git
commands =
    pre-commit run --all-files

[testenv:pylint]
description = run pylint
basepython = {[testenv:dev]basepython}
# we do not need to inherit from the root env
conda_spec =
conda_deps =
deps = -r requirements/pylint.txt
skip_install = true
commands =
    pylint src tests setup.py

[testenv:doc]
description = build documentation
basepython = {[testenv:dev]basepython}
deps =
    {[testenv]deps}
    -r requirements/doc.txt
usedevelop = true
passenv =
    # required by matplotlib
    HOME
    # path to the directory that contains plantuml.jar
    PLANTUML_DIR
commands =
    # cross platform directory removal
    python -c "import shutil; shutil.rmtree('doc_src/source/_modules', ignore_errors=True)"
    sphinx-build -j auto doc_src/source {toxinidir}/doc {posargs:-b html}

[testenv:doc-spell]
description = check doc spelling
envdir = {toxworkdir}/doc
basepython = {[testenv:doc]basepython}
usedevelop = {[testenv:doc]usedevelop}
deps = {[testenv:doc]deps}
setenv =
    SPELLCHECK=1
commands =
    sphinx-build -b spelling doc_src/source {toxinidir}/doc

[testenv:doc-linkchecker]
description = check links in the generated doc
basepython = python2.7
deps = linkchecker==9.4.0
skip_install = true
conda_deps =
conda_specs =
commands =
    linkchecker {toxinidir}/doc

[testenv:create-dist]
description = create the pypi distribution
basepython = {[testenv:dev]basepython}
# see packaging info at https://pypi.org/help/#publishing
deps =
    twine ==3.4.1
    build ==0.4.0
# we do not need to inherit from the root env
conda_spec =
conda_deps =
skip_install = true
whitelist_externals = rm
commands =
    rm -rf dist build
    python -m build
    twine check dist/*
    python setup.py check --metadata
